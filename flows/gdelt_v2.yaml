name: GDELT文件下载
arguments: 0

consts:
  save_path: data/gdelt-all

nodes:
  ck1: util.database.clickhouse.CK(**click1, database='goinv3_2410', table='gdelt_event_raw')

  as_dict: ToDict(key='url')
  ex_name: "Map(lambda s: s[s.rfind('/')+1:], key='url', target_key='name')"
  make_filename: ConcatFields('filename', 'name', prefix=save_path + '/')
  file_exists: Filter('util.files.exists', key='filename')
  file_not_exists: Not(file_exists, key='filename')

  download_zip: Map('util.http.download', key=('url', 'filename'), target_key='status', timeout=3600)
#  chain: Chain(Print(), as_dict, ex_name, make_filename, file_not_exists, download_zip)

  parse: Function('smartetl.gestata.gdelt.process_task', url_key='filename')
  writer: Map('gestata.dbops.upsert', ck1, retry_times=0, ignore_error=True)
  chain2: Chain(as_dict, ex_name, make_filename, file_not_exists, download_zip, file_exists, parse, Buffer(buffer_size=1000), writer)

loader: Function('smartetl.gestata.gdelt.day_zip')
processor: chain2
