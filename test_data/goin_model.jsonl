{"_id": "match_match__dataset__post", "name": "Query by example matcher", "description": "Match entities based on a complex set of criteria, like name, date of birth\nand nationality of a person. This works by submitting a batch of entities, each\nformatted like those returned by the API.\n\nTutorials:\n* [Using the matching API](https://www.opensanctions.org/docs/api/matching/)\n* [Configuring the scoring system](https://www.opensanctions.org/docs/api/scoring/)\n\nFor example, the following would be valid query examples:\n\n```json\n\"queries\": {\n    \"entity1\": {\n        \"schema\": \"Person\",\n        \"properties\": {\n            \"name\": [\"John Doe\"],\n            \"birthDate\": [\"1975-04-21\"],\n            \"nationality\": [\"us\"]\n        }\n    },\n    \"entity2\": {\n        \"schema\": \"Company\",\n        \"properties\": {\n            \"name\": [\"Brilliant Amazing Limited\"],\n            \"jurisdiction\": [\"hk\"],\n            \"registrationNumber\": [\"84BA99810\"]\n        }\n    }\n}\n```\nThe values for `entity1`, `entity2` can be chosen freely to correlate results\non the client side when the request is returned. The responses will be given\nfor each submitted example like this:\n\n```json\n\"responses\": {\n    \"entity1\": {\n        \"query\": {},\n        \"results\": [...]\n    },\n    \"entity2\": {\n        \"query\": {},\n        \"results\": [...]\n    }\n}\n```\n\nThe precision of the results will be dependent on the amount of detail submitted\nwith each example. The following properties are most helpful for particular types:\n\n* **Person**: ``name``, ``birthDate``, ``nationality``, ``idNumber``, ``address``\n* **Organization**: ``name``, ``country``, ``registrationNumber``, ``address``\n* **Company**: ``name``, ``jurisdiction``, ``registrationNumber``, ``address``,\n  ``incorporationDate``", "tags": ["Reconciliation", "Data access", "Matching", "System information"], "version": "yente 4.1.0", "service": {"address": null, "path": "/match/{dataset}", "method": "post", "input_args": {"path": {"dataset": {"__description": "Data source or collection name to be queries", "__type": "string", "__required": true}}, "query": {"limit": {"__description": "Number of results to return", "__default": 5, "__max": 500, "__type": "int"}, "threshold": {"__description": "Score threshold for results to be considered matches", "__default": 0.7, "__type": "float"}, "cutoff": {"__description": "Lower bound of score for results to be returned at all", "__default": 0.5, "__type": "float"}, "algorithm": {"__description": "Scoring algorithm to use, options: logic-v1, name-based, name-qualified, regression-v1, regression-v2 (best: logic-v1)", "__default": "logic-v1", "__type": "string"}, "include_dataset": {"__items": {"__type": "string"}, "__description": "Only include the given datasets in results", "__type": "array"}, "exclude_schema": {"__items": {"__type": "string"}, "__description": "Remove the given types of entities from results", "__type": "array"}, "exclude_dataset": {"__items": {"__type": "string"}, "__description": "Remove the given datasets from results", "__type": "array"}, "topics": {"__items": {"__type": "string"}, "__description": "Only return results that match the given topics", "__type": "array"}, "fuzzy": {"__description": "Use slow matching for candidate generation, does not affect scores", "__default": true, "__type": "bool"}, "changed_since": {"__type": "string"}}, "body": {"weights": {"type": {"__type": "float"}, "__description": "Weights", "__type": "object"}, "queries": {"id": {"__type": "string"}, "schema": {"__description": "Schema", "__type": "string", "__required": true}, "properties": {"__type": "object", "__description": "Properties", "__required": true}, "__description": "Queries", "__type": "object", "__required": true}, "__description": "EntityMatchQuery", "__type": "object", "__required": true, "__contenttype": "application/json"}}, "output_args": {"body": {"responses": {"status": {"__description": "Status", "__default": 200, "__type": "int"}, "results": {"__items": {"id": {"__description": "Id", "__type": "string", "__required": true}, "caption": {"__description": "Caption", "__type": "string", "__required": true}, "schema": {"__description": "Schema", "__type": "string", "__required": true}, "properties": {"items": {"__type": "string"}, "type": {"__type": "array"}, "__description": "Properties", "__type": "object", "__required": true}, "datasets": {"__items": {"__type": "string"}, "__description": "Datasets", "__type": "array"}, "referents": {"__items": {"__type": "string"}, "__description": "Referents", "__type": "array"}, "target": {"__description": "Target", "__type": "bool"}, "first_seen": {"__type": "string"}, "last_seen": {"__type": "string"}, "last_change": {"__type": "string"}, "score": {"__description": "Score", "__default": 0.99, "__type": "float"}, "features": {"type": {"__type": "float"}, "__description": "Features", "__type": "object", "__required": true}, "match": {"__description": "Match", "__type": "bool"}, "__description": "ScoredEntityResponse", "__type": "object", "__required": true}, "__description": "Results", "__type": "array", "__required": true}, "total": {"value": {"__description": "Value", "__type": "int", "__required": true}, "relation": {"__description": "Relation", "__default": "eq", "__type": "string"}, "__description": "TotalSpec", "__type": "object", "__required": true}, "query": {"id": {"__type": "string"}, "schema": {"__description": "Schema", "__type": "string", "__required": true}, "properties": {"__type": "object", "__description": "Properties", "__required": true}, "__description": "EntityExample", "__type": "object", "__required": true}, "__description": "Responses", "__type": "object", "__required": true}, "matcher": {"description": {"__type": "string", "__required": true}, "coefficient": {"__description": "Coefficient", "__type": "float", "__required": true}, "url": {"__description": "Url", "__type": "string", "__required": true}, "__description": "Matcher", "__type": "object", "__required": true}, "limit": {"__description": "Limit", "__type": "int", "__required": true}, "__description": "EntityMatchResponse", "__type": "object", "__required": true, "__contenttype": "application/json"}}}, "comment": "\n## Introduction\n\nThe [OpenSanctions](https://www.opensanctions.org) API allows users to search and query\nthe OpenSanctions [entity graph](https://www.opensanctions.org/docs/entities/). The API\ncan be used to search people, companies and [other types of entities](https://www.opensanctions.org/reference/#schema).\nIn particular, it can be used to check the presence of a specific entity on [sanctions\nlists](https://www.opensanctions.org/datasets/sanctions/) or in the broader\n[OpenSanctions dataset](https://www.opensanctions.org/datasets/).\n\nSee also:\n* [Example code in Python, JS, and more](https://github.com/opensanctions/api-examples#folders-and-files)\n* [OpenSanctions API product page](https://www.opensanctions.org/docs/api/)\n* [Account and usage information](https://www.opensanctions.org/service/account/)\n* [API frequently asked questions](https://www.opensanctions.org/docs/api/faq/)\n\n### Which endpoint should I use?\n\nThe API supports a variety of methods to access and query OpenSanctions data:\n\n* **Entity matching ([/match](#tag/Matching/operation/match_match__dataset__post))**. Use this \n  endpoint if you have a set of people or companies you wish to check against\n  sanctions or PEPs lists. This API supports fuzzy name matching and using additional\n  criteria (e.g. nationality, birth dates, tax identifiers, or addresses) to [score\n  entity matches](https://www.opensanctions.org/matcher/) and avoid false positives.\n\n  [Read the tutorial](https://www.opensanctions.org/docs/api/matching/) for an introduction in how to use the matching API. You will also want to familiarise yourself with the [entity data model](https://www.opensanctions.org/docs/entities/) used by the system and the [data dictionary](https://www.opensanctions.org/reference/) entity\n  types and properties.\n\n* **Text-based search ([/search](#tag/Matching/operation/search_search__dataset__get))**\n  is a useful tool for providing a user-facing search interface, including faceted\n  navigation. The search uses [industry standard string syntax](https://www.opensanctions.org/docs/api/search/)\n  which can be used to perform field-specific searches, wildcard and fuzzy searches. The\n  scores and ranking are generated by the search index and express search relevance, not\n  match quality.\n\n* **Entity fetching ([/entities](#tag/Data-access/operation/fetch_entity_entities__entity_id__get))**.\n  Retrieve the full details about an entity in the database. The full record will include\n  adjacent entities, such as company owners and subsidiaries, family members and associates\n  for PEPs, and detailed records for addresses and identification documents linked to\n  entities. This endpoint can be used to perform incremental traversal of the OpenSanctions\n  graph.\n\n  Read about the [entity data model](https://www.opensanctions.org/docs/entities/) and \n  consult the [data dictionary](https://www.opensanctions.org/reference/) to see all entity\n  types and their respective properties.\n\n* **Statement-based data access ([/statements](#tag/Data-access/operation/statements_statements_get))**\n  allows browsing OpenSanctions data in its most granular form. This can be useful to see\n  what source dataset a particular assertion (e.g. the birth date of a person) is sourced\n  from. Read about the [statement data model](https://www.opensanctions.org/docs/statements/).\n\n* **OpenRefine Reconciliation API ([/reconcile](#tag/Reconciliation))**. A specialised API\n  that lets OpenSanctions data be used by the [OpenRefine](https://openrefine.org/) data\n  cleaning tool. Read [the tutorial](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/)\n  to understand how this can be used as an investigative tool.\n\n## Authorization and API keys\n\nTo use the OpenSanctions API, you need an API key. Please visit the [API product page](https://www.opensanctions.org/api/) or [contact us](https://www.opensanctions.org/contact/) to learn more. OpenSanctions will issue free API keys to users in academia, non-profit organizations and those working in for-profit journalism.\n\n* [Using API authentication](https://www.opensanctions.org/docs/api/authentication/)\n\n## Dataset scopes\n\nThe API provides a sophisticated mechanism for selecting the scope of the data\nthat sould be queried by a particular request - for example, you can run a name \nagainst all sanctions lists, but not the datasets listing PEPs. \n\nDatasets can be of two types: source datasets - e.g. `us_ofac_sdn` (the US main\nsanctions list) contain only entities from one source. These source datasets are\ngrouped into collections - e.g. [`sanctions`](https://www.opensanctions.org/datasets/sanctions/),\nwhich contains entities from all sanctions lists contained in the database, or\n[`peps`](https://www.opensanctions.org/datasets/peps/), which covers all politically\nexposed persons sourced from various origins. If you are unsure which dataset you\nwant to screen against, use [`default`](https://www.opensanctions.org/datasets/default/) (the full\nOpenSanctions dataset).\n\nThese dataset scopes can be applied to searches and mapping requests by selecting\nthe desired scope in the URL path of the query: `/search/sanctions` will search \nall sanctioned entities, while `/search/us_ofac_sdn` limits the search to only\nthose entities listed on the US list.\n\nPlease note that each indivdual entity (e.g. a sanctioned person) can be linked to\nmultiple datasets because it has been [de-duplicated](https://www.opensanctions.org/docs/identifiers/).\n\n* See also: [List of datasets in OpenSanctions](https://www.opensanctions.org/datasets/)", "source": "web", "owner": "OpenSanctions", "created_time": 1731852432333, "modified_time": 1731852432333}
{"_id": "search_search__dataset__get", "name": "Simple entity search", "description": "Search endpoint for matching entities based on a simple piece of text, e.g.\na name. This can be used to implement a simple, user-facing search. For proper\nentity matching, the multi-property matching API should be used instead.\n\nSearch queries can include field-specific fitlers, wildcards and fuzzy searches.\nSee also: [search API documentation](https://www.opensanctions.org/docs/api/search/).", "tags": ["Reconciliation", "Data access", "Matching", "System information"], "version": "yente 4.1.0", "service": {"address": null, "path": "/search/{dataset}", "method": "get", "input_args": {"path": {"dataset": {"__description": "Data source or collection name to be queries", "__type": "string", "__required": true}}, "query": {"q": {"__description": "Query text", "__type": "string"}, "schema": {"__description": "Types of entities that can match the search", "__default": "Thing", "__type": "string"}, "include_dataset": {"__items": {"__type": "string"}, "__description": "Only include the given datasets in results", "__type": "array"}, "exclude_dataset": {"__items": {"__type": "string"}, "__description": "Remove the given datasets from results", "__type": "array"}, "exclude_schema": {"__items": {"__type": "string"}, "__description": "Remove the given types of entities from results", "__type": "array"}, "changed_since": {"__type": "string"}, "countries": {"__items": {"__type": "string"}, "__description": "Filter by country codes", "__type": "array"}, "topics": {"__items": {"__type": "string"}, "__description": "Filter by entity topics (e.g. sanction, role.pep)", "__type": "array"}, "datasets": {"__items": {"__type": "string"}, "__description": "Use `include_dataset` instead", "__type": "array"}, "limit": {"__description": "Number of results to return", "__default": 10, "__max": 500, "__type": "int"}, "offset": {"__description": "Start at result with given offset", "__max": 9499, "__type": "int"}, "sort": {"__items": {"__type": "string"}, "__description": "Sorting criteria", "__type": "array"}, "target": {"__type": "bool"}, "fuzzy": {"__description": "Allow fuzzy query syntax", "__type": "bool"}, "simple": {"__description": "Use simple syntax for user-facing query boxes", "__type": "bool"}, "facets": {"__items": {"__description": "Facet", "__type": "string"}, "__description": "Facet counts to include in response.", "__default": ["countries", "topics", "datasets"], "__type": "array"}}}, "output_args": {"body": {"limit": {"__description": "Limit", "__type": "int", "__required": true}, "offset": {"__description": "Offset", "__type": "int"}, "total": {"value": {"__description": "Value", "__type": "int", "__required": true}, "relation": {"__description": "Relation", "__default": "eq", "__type": "string"}, "__description": "TotalSpec", "__type": "object", "__required": true}, "results": {"__items": {"id": {"__description": "Id", "__type": "string", "__required": true}, "caption": {"__description": "Caption", "__type": "string", "__required": true}, "schema": {"__description": "Schema", "__type": "string", "__required": true}, "properties": {"items": {"__type": "string"}, "type": {"__type": "array"}, "__description": "Properties", "__type": "object", "__required": true}, "datasets": {"__items": {"__type": "string"}, "__description": "Datasets", "__type": "array"}, "referents": {"__items": {"__type": "string"}, "__description": "Referents", "__type": "array"}, "target": {"__description": "Target", "__type": "bool"}, "first_seen": {"__type": "string"}, "last_seen": {"__type": "string"}, "last_change": {"__type": "string"}, "__description": "EntityResponse", "__type": "object", "__required": true}, "__description": "Results", "__type": "array", "__required": true}, "facets": {"label": {"__description": "Label", "__type": "string", "__required": true}, "values": {"__items": {"name": {"__description": "Name", "__type": "string", "__required": true}, "label": {"__description": "Label", "__type": "string", "__required": true}, "count": {"__description": "Count", "__default": 1, "__type": "int"}, "__description": "SearchFacetItem", "__type": "object", "__required": true}, "__description": "Values", "__type": "array", "__required": true}, "__description": "Facets", "__type": "object", "__required": true}, "__description": "SearchResponse", "__type": "object", "__required": true, "__contenttype": "application/json"}}}, "comment": "\n## Introduction\n\nThe [OpenSanctions](https://www.opensanctions.org) API allows users to search and query\nthe OpenSanctions [entity graph](https://www.opensanctions.org/docs/entities/). The API\ncan be used to search people, companies and [other types of entities](https://www.opensanctions.org/reference/#schema).\nIn particular, it can be used to check the presence of a specific entity on [sanctions\nlists](https://www.opensanctions.org/datasets/sanctions/) or in the broader\n[OpenSanctions dataset](https://www.opensanctions.org/datasets/).\n\nSee also:\n* [Example code in Python, JS, and more](https://github.com/opensanctions/api-examples#folders-and-files)\n* [OpenSanctions API product page](https://www.opensanctions.org/docs/api/)\n* [Account and usage information](https://www.opensanctions.org/service/account/)\n* [API frequently asked questions](https://www.opensanctions.org/docs/api/faq/)\n\n### Which endpoint should I use?\n\nThe API supports a variety of methods to access and query OpenSanctions data:\n\n* **Entity matching ([/match](#tag/Matching/operation/match_match__dataset__post))**. Use this \n  endpoint if you have a set of people or companies you wish to check against\n  sanctions or PEPs lists. This API supports fuzzy name matching and using additional\n  criteria (e.g. nationality, birth dates, tax identifiers, or addresses) to [score\n  entity matches](https://www.opensanctions.org/matcher/) and avoid false positives.\n\n  [Read the tutorial](https://www.opensanctions.org/docs/api/matching/) for an introduction in how to use the matching API. You will also want to familiarise yourself with the [entity data model](https://www.opensanctions.org/docs/entities/) used by the system and the [data dictionary](https://www.opensanctions.org/reference/) entity\n  types and properties.\n\n* **Text-based search ([/search](#tag/Matching/operation/search_search__dataset__get))**\n  is a useful tool for providing a user-facing search interface, including faceted\n  navigation. The search uses [industry standard string syntax](https://www.opensanctions.org/docs/api/search/)\n  which can be used to perform field-specific searches, wildcard and fuzzy searches. The\n  scores and ranking are generated by the search index and express search relevance, not\n  match quality.\n\n* **Entity fetching ([/entities](#tag/Data-access/operation/fetch_entity_entities__entity_id__get))**.\n  Retrieve the full details about an entity in the database. The full record will include\n  adjacent entities, such as company owners and subsidiaries, family members and associates\n  for PEPs, and detailed records for addresses and identification documents linked to\n  entities. This endpoint can be used to perform incremental traversal of the OpenSanctions\n  graph.\n\n  Read about the [entity data model](https://www.opensanctions.org/docs/entities/) and \n  consult the [data dictionary](https://www.opensanctions.org/reference/) to see all entity\n  types and their respective properties.\n\n* **Statement-based data access ([/statements](#tag/Data-access/operation/statements_statements_get))**\n  allows browsing OpenSanctions data in its most granular form. This can be useful to see\n  what source dataset a particular assertion (e.g. the birth date of a person) is sourced\n  from. Read about the [statement data model](https://www.opensanctions.org/docs/statements/).\n\n* **OpenRefine Reconciliation API ([/reconcile](#tag/Reconciliation))**. A specialised API\n  that lets OpenSanctions data be used by the [OpenRefine](https://openrefine.org/) data\n  cleaning tool. Read [the tutorial](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/)\n  to understand how this can be used as an investigative tool.\n\n## Authorization and API keys\n\nTo use the OpenSanctions API, you need an API key. Please visit the [API product page](https://www.opensanctions.org/api/) or [contact us](https://www.opensanctions.org/contact/) to learn more. OpenSanctions will issue free API keys to users in academia, non-profit organizations and those working in for-profit journalism.\n\n* [Using API authentication](https://www.opensanctions.org/docs/api/authentication/)\n\n## Dataset scopes\n\nThe API provides a sophisticated mechanism for selecting the scope of the data\nthat sould be queried by a particular request - for example, you can run a name \nagainst all sanctions lists, but not the datasets listing PEPs. \n\nDatasets can be of two types: source datasets - e.g. `us_ofac_sdn` (the US main\nsanctions list) contain only entities from one source. These source datasets are\ngrouped into collections - e.g. [`sanctions`](https://www.opensanctions.org/datasets/sanctions/),\nwhich contains entities from all sanctions lists contained in the database, or\n[`peps`](https://www.opensanctions.org/datasets/peps/), which covers all politically\nexposed persons sourced from various origins. If you are unsure which dataset you\nwant to screen against, use [`default`](https://www.opensanctions.org/datasets/default/) (the full\nOpenSanctions dataset).\n\nThese dataset scopes can be applied to searches and mapping requests by selecting\nthe desired scope in the URL path of the query: `/search/sanctions` will search \nall sanctioned entities, while `/search/us_ofac_sdn` limits the search to only\nthose entities listed on the US list.\n\nPlease note that each indivdual entity (e.g. a sanctioned person) can be linked to\nmultiple datasets because it has been [de-duplicated](https://www.opensanctions.org/docs/identifiers/).\n\n* See also: [List of datasets in OpenSanctions](https://www.opensanctions.org/datasets/)", "source": "web", "owner": "OpenSanctions", "created_time": 1731852432333, "modified_time": 1731852432333}
{"_id": "fetch_entity_entities__entity_id__get", "name": "Fetch Entity", "description": "Retrieve a single entity by its ID. The entity will be returned in\nfull, with data from all datasets and with nested entities (adjacent\npassport, sanction and associated entities) included. If the entity ID\nhas been merged into a different canonical entity, an HTTP redirect will\nbe triggered.\n\nIntro: [entity data model](https://www.opensanctions.org/docs/entities/).", "tags": ["Reconciliation", "Data access", "Matching", "System information"], "version": "yente 4.1.0", "service": {"address": null, "path": "/entities/{entity_id}", "method": "get", "input_args": {"path": {"entity_id": {"__description": "ID of the entity to retrieve", "__type": "string", "__required": true}}, "query": {"nested": {"__description": "Include adjacent entities (e.g. addresses, family) in response", "__default": true, "__type": "bool"}}}, "output_args": {"body": {"id": {"__description": "Id", "__type": "string", "__required": true}, "caption": {"__description": "Caption", "__type": "string", "__required": true}, "schema": {"__description": "Schema", "__type": "string", "__required": true}, "properties": {"items": {"__type": "string"}, "type": {"__type": "array"}, "__description": "Properties", "__type": "object", "__required": true}, "datasets": {"__items": {"__type": "string"}, "__description": "Datasets", "__type": "array"}, "referents": {"__items": {"__type": "string"}, "__description": "Referents", "__type": "array"}, "target": {"__description": "Target", "__type": "bool"}, "first_seen": {"__type": "string"}, "last_seen": {"__type": "string"}, "last_change": {"__type": "string"}, "__description": "EntityResponse", "__type": "object", "__required": true, "__contenttype": "application/json"}}}, "comment": "\n## Introduction\n\nThe [OpenSanctions](https://www.opensanctions.org) API allows users to search and query\nthe OpenSanctions [entity graph](https://www.opensanctions.org/docs/entities/). The API\ncan be used to search people, companies and [other types of entities](https://www.opensanctions.org/reference/#schema).\nIn particular, it can be used to check the presence of a specific entity on [sanctions\nlists](https://www.opensanctions.org/datasets/sanctions/) or in the broader\n[OpenSanctions dataset](https://www.opensanctions.org/datasets/).\n\nSee also:\n* [Example code in Python, JS, and more](https://github.com/opensanctions/api-examples#folders-and-files)\n* [OpenSanctions API product page](https://www.opensanctions.org/docs/api/)\n* [Account and usage information](https://www.opensanctions.org/service/account/)\n* [API frequently asked questions](https://www.opensanctions.org/docs/api/faq/)\n\n### Which endpoint should I use?\n\nThe API supports a variety of methods to access and query OpenSanctions data:\n\n* **Entity matching ([/match](#tag/Matching/operation/match_match__dataset__post))**. Use this \n  endpoint if you have a set of people or companies you wish to check against\n  sanctions or PEPs lists. This API supports fuzzy name matching and using additional\n  criteria (e.g. nationality, birth dates, tax identifiers, or addresses) to [score\n  entity matches](https://www.opensanctions.org/matcher/) and avoid false positives.\n\n  [Read the tutorial](https://www.opensanctions.org/docs/api/matching/) for an introduction in how to use the matching API. You will also want to familiarise yourself with the [entity data model](https://www.opensanctions.org/docs/entities/) used by the system and the [data dictionary](https://www.opensanctions.org/reference/) entity\n  types and properties.\n\n* **Text-based search ([/search](#tag/Matching/operation/search_search__dataset__get))**\n  is a useful tool for providing a user-facing search interface, including faceted\n  navigation. The search uses [industry standard string syntax](https://www.opensanctions.org/docs/api/search/)\n  which can be used to perform field-specific searches, wildcard and fuzzy searches. The\n  scores and ranking are generated by the search index and express search relevance, not\n  match quality.\n\n* **Entity fetching ([/entities](#tag/Data-access/operation/fetch_entity_entities__entity_id__get))**.\n  Retrieve the full details about an entity in the database. The full record will include\n  adjacent entities, such as company owners and subsidiaries, family members and associates\n  for PEPs, and detailed records for addresses and identification documents linked to\n  entities. This endpoint can be used to perform incremental traversal of the OpenSanctions\n  graph.\n\n  Read about the [entity data model](https://www.opensanctions.org/docs/entities/) and \n  consult the [data dictionary](https://www.opensanctions.org/reference/) to see all entity\n  types and their respective properties.\n\n* **Statement-based data access ([/statements](#tag/Data-access/operation/statements_statements_get))**\n  allows browsing OpenSanctions data in its most granular form. This can be useful to see\n  what source dataset a particular assertion (e.g. the birth date of a person) is sourced\n  from. Read about the [statement data model](https://www.opensanctions.org/docs/statements/).\n\n* **OpenRefine Reconciliation API ([/reconcile](#tag/Reconciliation))**. A specialised API\n  that lets OpenSanctions data be used by the [OpenRefine](https://openrefine.org/) data\n  cleaning tool. Read [the tutorial](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/)\n  to understand how this can be used as an investigative tool.\n\n## Authorization and API keys\n\nTo use the OpenSanctions API, you need an API key. Please visit the [API product page](https://www.opensanctions.org/api/) or [contact us](https://www.opensanctions.org/contact/) to learn more. OpenSanctions will issue free API keys to users in academia, non-profit organizations and those working in for-profit journalism.\n\n* [Using API authentication](https://www.opensanctions.org/docs/api/authentication/)\n\n## Dataset scopes\n\nThe API provides a sophisticated mechanism for selecting the scope of the data\nthat sould be queried by a particular request - for example, you can run a name \nagainst all sanctions lists, but not the datasets listing PEPs. \n\nDatasets can be of two types: source datasets - e.g. `us_ofac_sdn` (the US main\nsanctions list) contain only entities from one source. These source datasets are\ngrouped into collections - e.g. [`sanctions`](https://www.opensanctions.org/datasets/sanctions/),\nwhich contains entities from all sanctions lists contained in the database, or\n[`peps`](https://www.opensanctions.org/datasets/peps/), which covers all politically\nexposed persons sourced from various origins. If you are unsure which dataset you\nwant to screen against, use [`default`](https://www.opensanctions.org/datasets/default/) (the full\nOpenSanctions dataset).\n\nThese dataset scopes can be applied to searches and mapping requests by selecting\nthe desired scope in the URL path of the query: `/search/sanctions` will search \nall sanctioned entities, while `/search/us_ofac_sdn` limits the search to only\nthose entities listed on the US list.\n\nPlease note that each indivdual entity (e.g. a sanctioned person) can be linked to\nmultiple datasets because it has been [de-duplicated](https://www.opensanctions.org/docs/identifiers/).\n\n* See also: [List of datasets in OpenSanctions](https://www.opensanctions.org/datasets/)", "source": "web", "owner": "OpenSanctions", "created_time": 1731852432333, "modified_time": 1731852432333}
{"_id": "reconcile_reconcile__dataset__get", "name": "Reconciliation manifest", "description": "Reconciliation API, emulates Google Refine API. This endpoint can be used\nto bulk match entities against the system using an end-user application like\n[OpenRefine](https://openrefine.org). The reconciliation API uses the same\nsearch and matching functions as the matching API and will also produce\nscores that reflect additional properties like country or date of birth, if\nspecified.\n\nTutorial: [Using OpenRefine to match entities in a spreadsheet](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/).", "tags": ["Reconciliation", "Data access", "Matching", "System information"], "version": "yente 4.1.0", "service": {"address": null, "path": "/reconcile/{dataset}", "method": "get", "input_args": {"path": {"dataset": {"__description": "Data source or collection name to be queries", "__type": "string", "__required": true}}}, "output_args": {"body": {"versions": {"__items": {"__type": "string"}, "__description": "Versions", "__type": "array", "__required": true}, "name": {"__description": "Name", "__type": "string", "__required": true}, "identifierSpace": {"__description": "Identifierspace", "__type": "string", "__required": true}, "schemaSpace": {"__description": "Schemaspace", "__type": "string", "__required": true}, "view": {"url": {"__description": "Url", "__type": "string", "__required": true}, "__description": "FreebaseManifestView", "__type": "object", "__required": true}, "preview": {"url": {"__description": "Url", "__type": "string", "__required": true}, "width": {"__description": "Width", "__type": "int", "__required": true}, "height": {"__description": "Height", "__type": "int", "__required": true}, "__description": "FreebaseManifestPreview", "__type": "object", "__required": true}, "suggest": {"entity": {"service_url": {"__description": "Service Url", "__type": "string", "__required": true}, "service_path": {"__description": "Service Path", "__type": "string", "__required": true}, "__description": "FreebaseManifestSuggestType", "__type": "object", "__required": true}, "type": {"service_url": {"__description": "Service Url", "__type": "string", "__required": true}, "service_path": {"__description": "Service Path", "__type": "string", "__required": true}, "__description": "FreebaseManifestSuggestType", "__type": "object", "__required": true}, "property": {"service_url": {"__description": "Service Url", "__type": "string", "__required": true}, "service_path": {"__description": "Service Path", "__type": "string", "__required": true}, "__description": "FreebaseManifestSuggestType", "__type": "object", "__required": true}, "__description": "FreebaseManifestSuggest", "__type": "object", "__required": true}, "defaultTypes": {"__items": {"id": {"__description": "Id", "__type": "string", "__required": true}, "name": {"__description": "Name", "__type": "string", "__required": true}, "description": {"__type": "string"}, "__description": "FreebaseType", "__type": "object", "__required": true}, "__description": "Defaulttypes", "__type": "array", "__required": true}, "__description": "FreebaseManifest", "__type": "object", "__required": true, "__contenttype": "application/json"}}}, "comment": "\n## Introduction\n\nThe [OpenSanctions](https://www.opensanctions.org) API allows users to search and query\nthe OpenSanctions [entity graph](https://www.opensanctions.org/docs/entities/). The API\ncan be used to search people, companies and [other types of entities](https://www.opensanctions.org/reference/#schema).\nIn particular, it can be used to check the presence of a specific entity on [sanctions\nlists](https://www.opensanctions.org/datasets/sanctions/) or in the broader\n[OpenSanctions dataset](https://www.opensanctions.org/datasets/).\n\nSee also:\n* [Example code in Python, JS, and more](https://github.com/opensanctions/api-examples#folders-and-files)\n* [OpenSanctions API product page](https://www.opensanctions.org/docs/api/)\n* [Account and usage information](https://www.opensanctions.org/service/account/)\n* [API frequently asked questions](https://www.opensanctions.org/docs/api/faq/)\n\n### Which endpoint should I use?\n\nThe API supports a variety of methods to access and query OpenSanctions data:\n\n* **Entity matching ([/match](#tag/Matching/operation/match_match__dataset__post))**. Use this \n  endpoint if you have a set of people or companies you wish to check against\n  sanctions or PEPs lists. This API supports fuzzy name matching and using additional\n  criteria (e.g. nationality, birth dates, tax identifiers, or addresses) to [score\n  entity matches](https://www.opensanctions.org/matcher/) and avoid false positives.\n\n  [Read the tutorial](https://www.opensanctions.org/docs/api/matching/) for an introduction in how to use the matching API. You will also want to familiarise yourself with the [entity data model](https://www.opensanctions.org/docs/entities/) used by the system and the [data dictionary](https://www.opensanctions.org/reference/) entity\n  types and properties.\n\n* **Text-based search ([/search](#tag/Matching/operation/search_search__dataset__get))**\n  is a useful tool for providing a user-facing search interface, including faceted\n  navigation. The search uses [industry standard string syntax](https://www.opensanctions.org/docs/api/search/)\n  which can be used to perform field-specific searches, wildcard and fuzzy searches. The\n  scores and ranking are generated by the search index and express search relevance, not\n  match quality.\n\n* **Entity fetching ([/entities](#tag/Data-access/operation/fetch_entity_entities__entity_id__get))**.\n  Retrieve the full details about an entity in the database. The full record will include\n  adjacent entities, such as company owners and subsidiaries, family members and associates\n  for PEPs, and detailed records for addresses and identification documents linked to\n  entities. This endpoint can be used to perform incremental traversal of the OpenSanctions\n  graph.\n\n  Read about the [entity data model](https://www.opensanctions.org/docs/entities/) and \n  consult the [data dictionary](https://www.opensanctions.org/reference/) to see all entity\n  types and their respective properties.\n\n* **Statement-based data access ([/statements](#tag/Data-access/operation/statements_statements_get))**\n  allows browsing OpenSanctions data in its most granular form. This can be useful to see\n  what source dataset a particular assertion (e.g. the birth date of a person) is sourced\n  from. Read about the [statement data model](https://www.opensanctions.org/docs/statements/).\n\n* **OpenRefine Reconciliation API ([/reconcile](#tag/Reconciliation))**. A specialised API\n  that lets OpenSanctions data be used by the [OpenRefine](https://openrefine.org/) data\n  cleaning tool. Read [the tutorial](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/)\n  to understand how this can be used as an investigative tool.\n\n## Authorization and API keys\n\nTo use the OpenSanctions API, you need an API key. Please visit the [API product page](https://www.opensanctions.org/api/) or [contact us](https://www.opensanctions.org/contact/) to learn more. OpenSanctions will issue free API keys to users in academia, non-profit organizations and those working in for-profit journalism.\n\n* [Using API authentication](https://www.opensanctions.org/docs/api/authentication/)\n\n## Dataset scopes\n\nThe API provides a sophisticated mechanism for selecting the scope of the data\nthat sould be queried by a particular request - for example, you can run a name \nagainst all sanctions lists, but not the datasets listing PEPs. \n\nDatasets can be of two types: source datasets - e.g. `us_ofac_sdn` (the US main\nsanctions list) contain only entities from one source. These source datasets are\ngrouped into collections - e.g. [`sanctions`](https://www.opensanctions.org/datasets/sanctions/),\nwhich contains entities from all sanctions lists contained in the database, or\n[`peps`](https://www.opensanctions.org/datasets/peps/), which covers all politically\nexposed persons sourced from various origins. If you are unsure which dataset you\nwant to screen against, use [`default`](https://www.opensanctions.org/datasets/default/) (the full\nOpenSanctions dataset).\n\nThese dataset scopes can be applied to searches and mapping requests by selecting\nthe desired scope in the URL path of the query: `/search/sanctions` will search \nall sanctioned entities, while `/search/us_ofac_sdn` limits the search to only\nthose entities listed on the US list.\n\nPlease note that each indivdual entity (e.g. a sanctioned person) can be linked to\nmultiple datasets because it has been [de-duplicated](https://www.opensanctions.org/docs/identifiers/).\n\n* See also: [List of datasets in OpenSanctions](https://www.opensanctions.org/datasets/)", "source": "web", "owner": "OpenSanctions", "created_time": 1731852432333, "modified_time": 1731852432333}
{"_id": "catalog_catalog_get", "name": "Data catalog", "description": "Return the service manifest, which includes a list of all indexed datasets.\n\nThe manifest is the configuration file of the yente service. It specifies what\ndata sources are included, and how often they should be loaded.", "tags": ["Reconciliation", "Data access", "Matching", "System information"], "version": "yente 4.1.0", "service": {"address": null, "path": "/catalog", "method": "get", "input_args": {}, "output_args": {"body": {"datasets": {"__items": {"name": {"__description": "Name", "__type": "string", "__required": true}, "title": {"__description": "Title", "__type": "string", "__required": true}, "summary": {"__type": "string"}, "url": {"__type": "string"}, "load": {"__description": "Load", "__type": "bool", "__required": true}, "entities_url": {"__type": "string"}, "version": {"__description": "Version", "__type": "string", "__required": true}, "index_version": {"__type": "string"}, "index_current": {"__description": "Index Current", "__type": "bool"}, "children": {"__items": {"__type": "string"}, "__description": "Children", "__type": "array", "__required": true}, "__description": "DatasetModel", "__type": "object", "__required": true}, "__description": "Datasets", "__type": "array", "__required": true}, "current": {"__items": {"__type": "string"}, "__description": "Current", "__type": "array", "__required": true}, "outdated": {"__items": {"__type": "string"}, "__description": "Outdated", "__type": "array", "__required": true}, "index_stale": {"__description": "Index Stale", "__type": "bool"}, "__description": "DataCatalogModel", "__type": "object", "__required": true, "__contenttype": "application/json"}}}, "comment": "\n## Introduction\n\nThe [OpenSanctions](https://www.opensanctions.org) API allows users to search and query\nthe OpenSanctions [entity graph](https://www.opensanctions.org/docs/entities/). The API\ncan be used to search people, companies and [other types of entities](https://www.opensanctions.org/reference/#schema).\nIn particular, it can be used to check the presence of a specific entity on [sanctions\nlists](https://www.opensanctions.org/datasets/sanctions/) or in the broader\n[OpenSanctions dataset](https://www.opensanctions.org/datasets/).\n\nSee also:\n* [Example code in Python, JS, and more](https://github.com/opensanctions/api-examples#folders-and-files)\n* [OpenSanctions API product page](https://www.opensanctions.org/docs/api/)\n* [Account and usage information](https://www.opensanctions.org/service/account/)\n* [API frequently asked questions](https://www.opensanctions.org/docs/api/faq/)\n\n### Which endpoint should I use?\n\nThe API supports a variety of methods to access and query OpenSanctions data:\n\n* **Entity matching ([/match](#tag/Matching/operation/match_match__dataset__post))**. Use this \n  endpoint if you have a set of people or companies you wish to check against\n  sanctions or PEPs lists. This API supports fuzzy name matching and using additional\n  criteria (e.g. nationality, birth dates, tax identifiers, or addresses) to [score\n  entity matches](https://www.opensanctions.org/matcher/) and avoid false positives.\n\n  [Read the tutorial](https://www.opensanctions.org/docs/api/matching/) for an introduction in how to use the matching API. You will also want to familiarise yourself with the [entity data model](https://www.opensanctions.org/docs/entities/) used by the system and the [data dictionary](https://www.opensanctions.org/reference/) entity\n  types and properties.\n\n* **Text-based search ([/search](#tag/Matching/operation/search_search__dataset__get))**\n  is a useful tool for providing a user-facing search interface, including faceted\n  navigation. The search uses [industry standard string syntax](https://www.opensanctions.org/docs/api/search/)\n  which can be used to perform field-specific searches, wildcard and fuzzy searches. The\n  scores and ranking are generated by the search index and express search relevance, not\n  match quality.\n\n* **Entity fetching ([/entities](#tag/Data-access/operation/fetch_entity_entities__entity_id__get))**.\n  Retrieve the full details about an entity in the database. The full record will include\n  adjacent entities, such as company owners and subsidiaries, family members and associates\n  for PEPs, and detailed records for addresses and identification documents linked to\n  entities. This endpoint can be used to perform incremental traversal of the OpenSanctions\n  graph.\n\n  Read about the [entity data model](https://www.opensanctions.org/docs/entities/) and \n  consult the [data dictionary](https://www.opensanctions.org/reference/) to see all entity\n  types and their respective properties.\n\n* **Statement-based data access ([/statements](#tag/Data-access/operation/statements_statements_get))**\n  allows browsing OpenSanctions data in its most granular form. This can be useful to see\n  what source dataset a particular assertion (e.g. the birth date of a person) is sourced\n  from. Read about the [statement data model](https://www.opensanctions.org/docs/statements/).\n\n* **OpenRefine Reconciliation API ([/reconcile](#tag/Reconciliation))**. A specialised API\n  that lets OpenSanctions data be used by the [OpenRefine](https://openrefine.org/) data\n  cleaning tool. Read [the tutorial](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/)\n  to understand how this can be used as an investigative tool.\n\n## Authorization and API keys\n\nTo use the OpenSanctions API, you need an API key. Please visit the [API product page](https://www.opensanctions.org/api/) or [contact us](https://www.opensanctions.org/contact/) to learn more. OpenSanctions will issue free API keys to users in academia, non-profit organizations and those working in for-profit journalism.\n\n* [Using API authentication](https://www.opensanctions.org/docs/api/authentication/)\n\n## Dataset scopes\n\nThe API provides a sophisticated mechanism for selecting the scope of the data\nthat sould be queried by a particular request - for example, you can run a name \nagainst all sanctions lists, but not the datasets listing PEPs. \n\nDatasets can be of two types: source datasets - e.g. `us_ofac_sdn` (the US main\nsanctions list) contain only entities from one source. These source datasets are\ngrouped into collections - e.g. [`sanctions`](https://www.opensanctions.org/datasets/sanctions/),\nwhich contains entities from all sanctions lists contained in the database, or\n[`peps`](https://www.opensanctions.org/datasets/peps/), which covers all politically\nexposed persons sourced from various origins. If you are unsure which dataset you\nwant to screen against, use [`default`](https://www.opensanctions.org/datasets/default/) (the full\nOpenSanctions dataset).\n\nThese dataset scopes can be applied to searches and mapping requests by selecting\nthe desired scope in the URL path of the query: `/search/sanctions` will search \nall sanctioned entities, while `/search/us_ofac_sdn` limits the search to only\nthose entities listed on the US list.\n\nPlease note that each indivdual entity (e.g. a sanctioned person) can be linked to\nmultiple datasets because it has been [de-duplicated](https://www.opensanctions.org/docs/identifiers/).\n\n* See also: [List of datasets in OpenSanctions](https://www.opensanctions.org/datasets/)", "source": "web", "owner": "OpenSanctions", "created_time": 1731852432333, "modified_time": 1731852432333}
{"_id": "algorithms_algorithms_get", "name": "Algorithms", "description": "Return a list of the supported matching/scoring algorithms used by the matching\nendpoint.\n\nSee also the [scoring documentation](https://www.opensanctions.org/docs/api/scoring/).", "tags": ["Reconciliation", "Data access", "Matching", "System information"], "version": "yente 4.1.0", "service": {"address": null, "path": "/algorithms", "method": "get", "input_args": {}, "output_args": {"body": {"algorithms": {"__items": {"name": {"__description": "Name", "__type": "string", "__required": true}, "description": {"__type": "string"}, "features": {"description": {"__type": "string", "__required": true}, "coefficient": {"__description": "Coefficient", "__type": "float", "__required": true}, "url": {"__description": "Url", "__type": "string", "__required": true}, "__description": "Features", "__type": "object", "__required": true}, "__description": "Algorithm", "__type": "object", "__required": true}, "__description": "Algorithms", "__type": "array", "__required": true}, "default": {"__description": "Default", "__type": "string", "__required": true}, "best": {"__description": "Best", "__type": "string", "__required": true}, "__description": "AlgorithmResponse", "__type": "object", "__required": true, "__contenttype": "application/json"}}}, "comment": "\n## Introduction\n\nThe [OpenSanctions](https://www.opensanctions.org) API allows users to search and query\nthe OpenSanctions [entity graph](https://www.opensanctions.org/docs/entities/). The API\ncan be used to search people, companies and [other types of entities](https://www.opensanctions.org/reference/#schema).\nIn particular, it can be used to check the presence of a specific entity on [sanctions\nlists](https://www.opensanctions.org/datasets/sanctions/) or in the broader\n[OpenSanctions dataset](https://www.opensanctions.org/datasets/).\n\nSee also:\n* [Example code in Python, JS, and more](https://github.com/opensanctions/api-examples#folders-and-files)\n* [OpenSanctions API product page](https://www.opensanctions.org/docs/api/)\n* [Account and usage information](https://www.opensanctions.org/service/account/)\n* [API frequently asked questions](https://www.opensanctions.org/docs/api/faq/)\n\n### Which endpoint should I use?\n\nThe API supports a variety of methods to access and query OpenSanctions data:\n\n* **Entity matching ([/match](#tag/Matching/operation/match_match__dataset__post))**. Use this \n  endpoint if you have a set of people or companies you wish to check against\n  sanctions or PEPs lists. This API supports fuzzy name matching and using additional\n  criteria (e.g. nationality, birth dates, tax identifiers, or addresses) to [score\n  entity matches](https://www.opensanctions.org/matcher/) and avoid false positives.\n\n  [Read the tutorial](https://www.opensanctions.org/docs/api/matching/) for an introduction in how to use the matching API. You will also want to familiarise yourself with the [entity data model](https://www.opensanctions.org/docs/entities/) used by the system and the [data dictionary](https://www.opensanctions.org/reference/) entity\n  types and properties.\n\n* **Text-based search ([/search](#tag/Matching/operation/search_search__dataset__get))**\n  is a useful tool for providing a user-facing search interface, including faceted\n  navigation. The search uses [industry standard string syntax](https://www.opensanctions.org/docs/api/search/)\n  which can be used to perform field-specific searches, wildcard and fuzzy searches. The\n  scores and ranking are generated by the search index and express search relevance, not\n  match quality.\n\n* **Entity fetching ([/entities](#tag/Data-access/operation/fetch_entity_entities__entity_id__get))**.\n  Retrieve the full details about an entity in the database. The full record will include\n  adjacent entities, such as company owners and subsidiaries, family members and associates\n  for PEPs, and detailed records for addresses and identification documents linked to\n  entities. This endpoint can be used to perform incremental traversal of the OpenSanctions\n  graph.\n\n  Read about the [entity data model](https://www.opensanctions.org/docs/entities/) and \n  consult the [data dictionary](https://www.opensanctions.org/reference/) to see all entity\n  types and their respective properties.\n\n* **Statement-based data access ([/statements](#tag/Data-access/operation/statements_statements_get))**\n  allows browsing OpenSanctions data in its most granular form. This can be useful to see\n  what source dataset a particular assertion (e.g. the birth date of a person) is sourced\n  from. Read about the [statement data model](https://www.opensanctions.org/docs/statements/).\n\n* **OpenRefine Reconciliation API ([/reconcile](#tag/Reconciliation))**. A specialised API\n  that lets OpenSanctions data be used by the [OpenRefine](https://openrefine.org/) data\n  cleaning tool. Read [the tutorial](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/)\n  to understand how this can be used as an investigative tool.\n\n## Authorization and API keys\n\nTo use the OpenSanctions API, you need an API key. Please visit the [API product page](https://www.opensanctions.org/api/) or [contact us](https://www.opensanctions.org/contact/) to learn more. OpenSanctions will issue free API keys to users in academia, non-profit organizations and those working in for-profit journalism.\n\n* [Using API authentication](https://www.opensanctions.org/docs/api/authentication/)\n\n## Dataset scopes\n\nThe API provides a sophisticated mechanism for selecting the scope of the data\nthat sould be queried by a particular request - for example, you can run a name \nagainst all sanctions lists, but not the datasets listing PEPs. \n\nDatasets can be of two types: source datasets - e.g. `us_ofac_sdn` (the US main\nsanctions list) contain only entities from one source. These source datasets are\ngrouped into collections - e.g. [`sanctions`](https://www.opensanctions.org/datasets/sanctions/),\nwhich contains entities from all sanctions lists contained in the database, or\n[`peps`](https://www.opensanctions.org/datasets/peps/), which covers all politically\nexposed persons sourced from various origins. If you are unsure which dataset you\nwant to screen against, use [`default`](https://www.opensanctions.org/datasets/default/) (the full\nOpenSanctions dataset).\n\nThese dataset scopes can be applied to searches and mapping requests by selecting\nthe desired scope in the URL path of the query: `/search/sanctions` will search \nall sanctioned entities, while `/search/us_ofac_sdn` limits the search to only\nthose entities listed on the US list.\n\nPlease note that each indivdual entity (e.g. a sanctioned person) can be linked to\nmultiple datasets because it has been [de-duplicated](https://www.opensanctions.org/docs/identifiers/).\n\n* See also: [List of datasets in OpenSanctions](https://www.opensanctions.org/datasets/)", "source": "web", "owner": "OpenSanctions", "created_time": 1731852432333, "modified_time": 1731852432333}
{"_id": "get_account_billing_account_get", "name": "Retrieve account details", "description": "Return the account details linked to the given API key and the\nmeasured API request usage of the account in the past period.", "tags": ["Reconciliation", "Data access", "Matching", "System information"], "version": "yente 4.1.0", "service": {"address": null, "path": "/billing/account", "method": "get", "input_args": {"query": {"usage_credential": {"__type": "int"}, "access_token": {"__type": "string"}}}, "output_args": {"body": {"credentials": {"__items": {"id": {"__description": "Id", "__type": "int", "__required": true}, "customer_id": {"__description": "Customer Id", "__type": "int", "__required": true}, "label": {"__type": "string", "__required": true}, "secret": {"__description": "Secret", "__type": "string", "__required": true}, "chargebee_subscription_id": {"__type": "string", "__required": true}, "created_at": {"__description": "Created At", "__type": "string", "__required": true}, "expires_at": {"__type": "string", "__required": true}, "monthly_quota": {"__type": "int", "__required": true}, "__description": "Credential", "__type": "object", "__required": true}, "__description": "Credentials", "__type": "array", "__required": true}, "user": {"id": {"__description": "Id", "__type": "int", "__required": true}, "customer_id": {"__description": "Customer Id", "__type": "int", "__required": true}, "sub": {"__description": "Sub", "__type": "string", "__required": true}, "name": {"__type": "string", "__required": true}, "email": {"__description": "Email", "__type": "string", "__required": true}, "created_at": {"__description": "Created At", "__type": "string", "__required": true}, "blocked": {"__description": "Blocked", "__type": "bool", "__required": true}, "__description": "User", "__type": "object", "__required": true}, "customer": {"id": {"__description": "Id", "__type": "int", "__required": true}, "name": {"__type": "string", "__required": true}, "chargebee_id": {"__type": "string", "__required": true}, "created_at": {"__description": "Created At", "__type": "string", "__required": true}, "__description": "Customer", "__type": "object", "__required": true}, "usage": {"dates": {"__items": {"routes": {"__items": {"route": {"__description": "Route", "__type": "string", "__required": true}, "count": {"__description": "Count", "__type": "int", "__required": true}, "__description": "RouteUsage", "__type": "object", "__required": true}, "__description": "Routes", "__type": "array", "__required": true}, "date": {"__description": "Date", "__type": "string", "__required": true}, "total": {"__description": "Total", "__type": "int", "__required": true}, "__description": "DateUsage", "__type": "object", "__required": true}, "__description": "Dates", "__type": "array", "__required": true}, "days": {"__description": "Days", "__type": "int", "__required": true}, "total": {"__description": "Total", "__type": "int", "__required": true}, "__description": "UserUsage", "__type": "object", "__required": true}, "__description": "AccountResponse", "__type": "object", "__required": true, "__contenttype": "application/json"}}}, "comment": "\n## Introduction\n\nThe [OpenSanctions](https://www.opensanctions.org) API allows users to search and query\nthe OpenSanctions [entity graph](https://www.opensanctions.org/docs/entities/). The API\ncan be used to search people, companies and [other types of entities](https://www.opensanctions.org/reference/#schema).\nIn particular, it can be used to check the presence of a specific entity on [sanctions\nlists](https://www.opensanctions.org/datasets/sanctions/) or in the broader\n[OpenSanctions dataset](https://www.opensanctions.org/datasets/).\n\nSee also:\n* [Example code in Python, JS, and more](https://github.com/opensanctions/api-examples#folders-and-files)\n* [OpenSanctions API product page](https://www.opensanctions.org/docs/api/)\n* [Account and usage information](https://www.opensanctions.org/service/account/)\n* [API frequently asked questions](https://www.opensanctions.org/docs/api/faq/)\n\n### Which endpoint should I use?\n\nThe API supports a variety of methods to access and query OpenSanctions data:\n\n* **Entity matching ([/match](#tag/Matching/operation/match_match__dataset__post))**. Use this \n  endpoint if you have a set of people or companies you wish to check against\n  sanctions or PEPs lists. This API supports fuzzy name matching and using additional\n  criteria (e.g. nationality, birth dates, tax identifiers, or addresses) to [score\n  entity matches](https://www.opensanctions.org/matcher/) and avoid false positives.\n\n  [Read the tutorial](https://www.opensanctions.org/docs/api/matching/) for an introduction in how to use the matching API. You will also want to familiarise yourself with the [entity data model](https://www.opensanctions.org/docs/entities/) used by the system and the [data dictionary](https://www.opensanctions.org/reference/) entity\n  types and properties.\n\n* **Text-based search ([/search](#tag/Matching/operation/search_search__dataset__get))**\n  is a useful tool for providing a user-facing search interface, including faceted\n  navigation. The search uses [industry standard string syntax](https://www.opensanctions.org/docs/api/search/)\n  which can be used to perform field-specific searches, wildcard and fuzzy searches. The\n  scores and ranking are generated by the search index and express search relevance, not\n  match quality.\n\n* **Entity fetching ([/entities](#tag/Data-access/operation/fetch_entity_entities__entity_id__get))**.\n  Retrieve the full details about an entity in the database. The full record will include\n  adjacent entities, such as company owners and subsidiaries, family members and associates\n  for PEPs, and detailed records for addresses and identification documents linked to\n  entities. This endpoint can be used to perform incremental traversal of the OpenSanctions\n  graph.\n\n  Read about the [entity data model](https://www.opensanctions.org/docs/entities/) and \n  consult the [data dictionary](https://www.opensanctions.org/reference/) to see all entity\n  types and their respective properties.\n\n* **Statement-based data access ([/statements](#tag/Data-access/operation/statements_statements_get))**\n  allows browsing OpenSanctions data in its most granular form. This can be useful to see\n  what source dataset a particular assertion (e.g. the birth date of a person) is sourced\n  from. Read about the [statement data model](https://www.opensanctions.org/docs/statements/).\n\n* **OpenRefine Reconciliation API ([/reconcile](#tag/Reconciliation))**. A specialised API\n  that lets OpenSanctions data be used by the [OpenRefine](https://openrefine.org/) data\n  cleaning tool. Read [the tutorial](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/)\n  to understand how this can be used as an investigative tool.\n\n## Authorization and API keys\n\nTo use the OpenSanctions API, you need an API key. Please visit the [API product page](https://www.opensanctions.org/api/) or [contact us](https://www.opensanctions.org/contact/) to learn more. OpenSanctions will issue free API keys to users in academia, non-profit organizations and those working in for-profit journalism.\n\n* [Using API authentication](https://www.opensanctions.org/docs/api/authentication/)\n\n## Dataset scopes\n\nThe API provides a sophisticated mechanism for selecting the scope of the data\nthat sould be queried by a particular request - for example, you can run a name \nagainst all sanctions lists, but not the datasets listing PEPs. \n\nDatasets can be of two types: source datasets - e.g. `us_ofac_sdn` (the US main\nsanctions list) contain only entities from one source. These source datasets are\ngrouped into collections - e.g. [`sanctions`](https://www.opensanctions.org/datasets/sanctions/),\nwhich contains entities from all sanctions lists contained in the database, or\n[`peps`](https://www.opensanctions.org/datasets/peps/), which covers all politically\nexposed persons sourced from various origins. If you are unsure which dataset you\nwant to screen against, use [`default`](https://www.opensanctions.org/datasets/default/) (the full\nOpenSanctions dataset).\n\nThese dataset scopes can be applied to searches and mapping requests by selecting\nthe desired scope in the URL path of the query: `/search/sanctions` will search \nall sanctioned entities, while `/search/us_ofac_sdn` limits the search to only\nthose entities listed on the US list.\n\nPlease note that each indivdual entity (e.g. a sanctioned person) can be linked to\nmultiple datasets because it has been [de-duplicated](https://www.opensanctions.org/docs/identifiers/).\n\n* See also: [List of datasets in OpenSanctions](https://www.opensanctions.org/datasets/)", "source": "web", "owner": "OpenSanctions", "created_time": 1731852432333, "modified_time": 1731852432333}
{"_id": "statements_statements_get", "name": "Statement-based records", "description": "Access raw entity data as statements.\n\nRead [statement-based data model](https://www.opensanctions.org/docs/statements/)\nfor context regarding this endpoint.\n\nUsing this endpoint does not incur a charge, but a valid API key must be supplied.", "tags": ["Reconciliation", "Data access", "Matching", "System information"], "version": "yente 4.1.0", "service": {"address": null, "path": "/statements", "method": "get", "input_args": {"query": {"dataset": {"__type": "string"}, "entity_id": {"__type": "string"}, "canonical_id": {"__type": "string"}, "prop": {"__type": "string"}, "value": {"__type": "string"}, "target": {"__type": "bool"}, "schema": {"__type": "string"}, "sort": {"__items": {"__type": "string"}, "__description": "Sorting criteria", "__default": ["canonical_id", "prop"], "__type": "array"}, "limit": {"__description": "Number of results to return", "__default": 50, "__max": 5000, "__type": "int"}, "offset": {"__description": "Number of results to skip before returning them", "__max": 9499, "__type": "int"}}}, "output_args": {"body": {"limit": {"__description": "Limit", "__type": "int", "__required": true}, "offset": {"__description": "Offset", "__type": "int"}, "total": {"value": {"__description": "Value", "__type": "int", "__required": true}, "relation": {"__description": "Relation", "__default": "eq", "__type": "string"}, "__description": "TotalSpec", "__type": "object", "__required": true}, "results": {"__items": {"id": {"__description": "Id", "__type": "string", "__required": true}, "entity_id": {"__description": "Entity Id", "__type": "string", "__required": true}, "canonical_id": {"__description": "Canonical Id", "__type": "string", "__required": true}, "prop": {"__description": "Prop", "__type": "string", "__required": true}, "prop_type": {"__description": "Prop Type", "__type": "string", "__required": true}, "schema": {"__description": "Schema", "__type": "string", "__required": true}, "value": {"__description": "Value", "__type": "string", "__required": true}, "original_value": {"__type": "string"}, "dataset": {"__description": "Dataset", "__type": "string", "__required": true}, "lang": {"__type": "string"}, "target": {"__description": "Target", "__type": "bool", "__required": true}, "first_seen": {"__description": "First Seen", "__type": "string", "__required": true}, "last_seen": {"__description": "Last Seen", "__type": "string", "__required": true}, "__description": "Statement", "__type": "object", "__required": true}, "__description": "Results", "__type": "array", "__required": true}, "__description": "StatementResponse", "__type": "object", "__required": true, "__contenttype": "application/json"}}}, "comment": "\n## Introduction\n\nThe [OpenSanctions](https://www.opensanctions.org) API allows users to search and query\nthe OpenSanctions [entity graph](https://www.opensanctions.org/docs/entities/). The API\ncan be used to search people, companies and [other types of entities](https://www.opensanctions.org/reference/#schema).\nIn particular, it can be used to check the presence of a specific entity on [sanctions\nlists](https://www.opensanctions.org/datasets/sanctions/) or in the broader\n[OpenSanctions dataset](https://www.opensanctions.org/datasets/).\n\nSee also:\n* [Example code in Python, JS, and more](https://github.com/opensanctions/api-examples#folders-and-files)\n* [OpenSanctions API product page](https://www.opensanctions.org/docs/api/)\n* [Account and usage information](https://www.opensanctions.org/service/account/)\n* [API frequently asked questions](https://www.opensanctions.org/docs/api/faq/)\n\n### Which endpoint should I use?\n\nThe API supports a variety of methods to access and query OpenSanctions data:\n\n* **Entity matching ([/match](#tag/Matching/operation/match_match__dataset__post))**. Use this \n  endpoint if you have a set of people or companies you wish to check against\n  sanctions or PEPs lists. This API supports fuzzy name matching and using additional\n  criteria (e.g. nationality, birth dates, tax identifiers, or addresses) to [score\n  entity matches](https://www.opensanctions.org/matcher/) and avoid false positives.\n\n  [Read the tutorial](https://www.opensanctions.org/docs/api/matching/) for an introduction in how to use the matching API. You will also want to familiarise yourself with the [entity data model](https://www.opensanctions.org/docs/entities/) used by the system and the [data dictionary](https://www.opensanctions.org/reference/) entity\n  types and properties.\n\n* **Text-based search ([/search](#tag/Matching/operation/search_search__dataset__get))**\n  is a useful tool for providing a user-facing search interface, including faceted\n  navigation. The search uses [industry standard string syntax](https://www.opensanctions.org/docs/api/search/)\n  which can be used to perform field-specific searches, wildcard and fuzzy searches. The\n  scores and ranking are generated by the search index and express search relevance, not\n  match quality.\n\n* **Entity fetching ([/entities](#tag/Data-access/operation/fetch_entity_entities__entity_id__get))**.\n  Retrieve the full details about an entity in the database. The full record will include\n  adjacent entities, such as company owners and subsidiaries, family members and associates\n  for PEPs, and detailed records for addresses and identification documents linked to\n  entities. This endpoint can be used to perform incremental traversal of the OpenSanctions\n  graph.\n\n  Read about the [entity data model](https://www.opensanctions.org/docs/entities/) and \n  consult the [data dictionary](https://www.opensanctions.org/reference/) to see all entity\n  types and their respective properties.\n\n* **Statement-based data access ([/statements](#tag/Data-access/operation/statements_statements_get))**\n  allows browsing OpenSanctions data in its most granular form. This can be useful to see\n  what source dataset a particular assertion (e.g. the birth date of a person) is sourced\n  from. Read about the [statement data model](https://www.opensanctions.org/docs/statements/).\n\n* **OpenRefine Reconciliation API ([/reconcile](#tag/Reconciliation))**. A specialised API\n  that lets OpenSanctions data be used by the [OpenRefine](https://openrefine.org/) data\n  cleaning tool. Read [the tutorial](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/)\n  to understand how this can be used as an investigative tool.\n\n## Authorization and API keys\n\nTo use the OpenSanctions API, you need an API key. Please visit the [API product page](https://www.opensanctions.org/api/) or [contact us](https://www.opensanctions.org/contact/) to learn more. OpenSanctions will issue free API keys to users in academia, non-profit organizations and those working in for-profit journalism.\n\n* [Using API authentication](https://www.opensanctions.org/docs/api/authentication/)\n\n## Dataset scopes\n\nThe API provides a sophisticated mechanism for selecting the scope of the data\nthat sould be queried by a particular request - for example, you can run a name \nagainst all sanctions lists, but not the datasets listing PEPs. \n\nDatasets can be of two types: source datasets - e.g. `us_ofac_sdn` (the US main\nsanctions list) contain only entities from one source. These source datasets are\ngrouped into collections - e.g. [`sanctions`](https://www.opensanctions.org/datasets/sanctions/),\nwhich contains entities from all sanctions lists contained in the database, or\n[`peps`](https://www.opensanctions.org/datasets/peps/), which covers all politically\nexposed persons sourced from various origins. If you are unsure which dataset you\nwant to screen against, use [`default`](https://www.opensanctions.org/datasets/default/) (the full\nOpenSanctions dataset).\n\nThese dataset scopes can be applied to searches and mapping requests by selecting\nthe desired scope in the URL path of the query: `/search/sanctions` will search \nall sanctioned entities, while `/search/us_ofac_sdn` limits the search to only\nthose entities listed on the US list.\n\nPlease note that each indivdual entity (e.g. a sanctioned person) can be linked to\nmultiple datasets because it has been [de-duplicated](https://www.opensanctions.org/docs/identifiers/).\n\n* See also: [List of datasets in OpenSanctions](https://www.opensanctions.org/datasets/)", "source": "web", "owner": "OpenSanctions", "created_time": 1731852432333, "modified_time": 1731852432333}
