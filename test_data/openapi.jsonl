{"openapi": "3.1.0", "info": {"title": "Query by example matcher", "version": "yente 4.1.0"}, "servers": [{"url": null}], "paths": {"/match/{dataset}": {"post": {"operationId": "match_match__dataset__post", "description": "Match entities based on a complex set of criteria, like name, date of birth\nand nationality of a person. This works by submitting a batch of entities, each\nformatted like those returned by the API.\n\nTutorials:\n* [Using the matching API](https://www.opensanctions.org/docs/api/matching/)\n* [Configuring the scoring system](https://www.opensanctions.org/docs/api/scoring/)\n\nFor example, the following would be valid query examples:\n\n```json\n\"queries\": {\n    \"entity1\": {\n        \"schema\": \"Person\",\n        \"properties\": {\n            \"name\": [\"John Doe\"],\n            \"birthDate\": [\"1975-04-21\"],\n            \"nationality\": [\"us\"]\n        }\n    },\n    \"entity2\": {\n        \"schema\": \"Company\",\n        \"properties\": {\n            \"name\": [\"Brilliant Amazing Limited\"],\n            \"jurisdiction\": [\"hk\"],\n            \"registrationNumber\": [\"84BA99810\"]\n        }\n    }\n}\n```\nThe values for `entity1`, `entity2` can be chosen freely to correlate results\non the client side when the request is returned. The responses will be given\nfor each submitted example like this:\n\n```json\n\"responses\": {\n    \"entity1\": {\n        \"query\": {},\n        \"results\": [...]\n    },\n    \"entity2\": {\n        \"query\": {},\n        \"results\": [...]\n    }\n}\n```\n\nThe precision of the results will be dependent on the amount of detail submitted\nwith each example. The following properties are most helpful for particular types:\n\n* **Person**: ``name``, ``birthDate``, ``nationality``, ``idNumber``, ``address``\n* **Organization**: ``name``, ``country``, ``registrationNumber``, ``address``\n* **Company**: ``name``, ``jurisdiction``, ``registrationNumber``, ``address``,\n  ``incorporationDate``", "parameters": [{"name": "dataset", "in": "path", "description": "Data source or collection name to be queries", "schema": {"type": "string", "required": true, "title": "Data source or collection name to be queries"}}, {"name": "limit", "in": "query", "description": "Number of results to return", "schema": {"type": "integer", "required": false, "title": "Number of results to return", "maximum": 500, "default": 5}}, {"name": "threshold", "in": "query", "description": "Score threshold for results to be considered matches", "schema": {"type": "number", "required": false, "title": "Score threshold for results to be considered matches", "default": 0.7}}, {"name": "cutoff", "in": "query", "description": "Lower bound of score for results to be returned at all", "schema": {"type": "number", "required": false, "title": "Lower bound of score for results to be returned at all", "default": 0.5}}, {"name": "algorithm", "in": "query", "description": "Scoring algorithm to use, options: logic-v1, name-based, name-qualified, regression-v1, regression-v2 (best: logic-v1)", "schema": {"type": "string", "required": false, "title": "Scoring algorithm to use, options: logic-v1, name-based, name-qualified, regression-v1, regression-v2 (best: logic-v1)", "default": "logic-v1"}}, {"name": "include_dataset", "in": "query", "description": "Only include the given datasets in results", "schema": {"type": "array", "required": false, "title": "Only include the given datasets in results", "items": {"type": "string", "required": false}}}, {"name": "exclude_schema", "in": "query", "description": "Remove the given types of entities from results", "schema": {"type": "array", "required": false, "title": "Remove the given types of entities from results", "items": {"type": "string", "required": false}}}, {"name": "exclude_dataset", "in": "query", "description": "Remove the given datasets from results", "schema": {"type": "array", "required": false, "title": "Remove the given datasets from results", "items": {"type": "string", "required": false}}}, {"name": "topics", "in": "query", "description": "Only return results that match the given topics", "schema": {"type": "array", "required": false, "title": "Only return results that match the given topics", "items": {"type": "string", "required": false}}}, {"name": "fuzzy", "in": "query", "description": "Use slow matching for candidate generation, does not affect scores", "schema": {"type": "boolean", "required": false, "title": "Use slow matching for candidate generation, does not affect scores", "default": true}}, {"name": "changed_since", "in": "query", "description": null, "schema": {"type": "string", "required": false}}], "requestBody": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "EntityMatchQuery", "properties": {"weights": {"type": "object", "required": false, "title": "Weights", "properties": {"type": {"type": "number", "required": false}}}, "queries": {"type": "object", "required": true, "title": "Queries", "properties": {"id": {"type": "string", "required": false}, "schema": {"type": "string", "required": true, "title": "Schema"}, "properties": {"type": "object", "required": true, "title": "Properties", "properties": {}}}}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "EntityMatchResponse", "properties": {"responses": {"type": "object", "required": true, "title": "Responses", "properties": {"status": {"type": "integer", "required": false, "title": "Status", "default": 200}, "results": {"type": "array", "required": true, "title": "Results", "items": {"type": "object", "required": true, "title": "ScoredEntityResponse", "properties": {"id": {"type": "string", "required": true, "title": "Id"}, "caption": {"type": "string", "required": true, "title": "Caption"}, "schema": {"type": "string", "required": true, "title": "Schema"}, "properties": {"type": "object", "required": true, "title": "Properties", "properties": {"items": {"type": "string", "required": false}, "type": {"type": "array", "required": false, "items": {"type": "string", "required": false}}}}, "datasets": {"type": "array", "required": false, "title": "Datasets", "items": {"type": "string", "required": false}}, "referents": {"type": "array", "required": false, "title": "Referents", "items": {"type": "string", "required": false}}, "target": {"type": "boolean", "required": false, "title": "Target"}, "first_seen": {"type": "string", "required": false}, "last_seen": {"type": "string", "required": false}, "last_change": {"type": "string", "required": false}, "score": {"type": "number", "required": false, "title": "Score", "default": 0.99}, "features": {"type": "object", "required": true, "title": "Features", "properties": {"type": {"type": "number", "required": false}}}, "match": {"type": "boolean", "required": false, "title": "Match"}}}}, "total": {"type": "object", "required": true, "title": "TotalSpec", "properties": {"value": {"type": "integer", "required": true, "title": "Value"}, "relation": {"type": "string", "required": false, "title": "Relation", "default": "eq"}}}, "query": {"type": "object", "required": true, "title": "EntityExample", "properties": {"id": {"type": "string", "required": false}, "schema": {"type": "string", "required": true, "title": "Schema"}, "properties": {"type": "object", "required": true, "title": "Properties", "properties": {}}}}}}, "matcher": {"type": "object", "required": true, "title": "Matcher", "properties": {"description": {"type": "string", "required": true}, "coefficient": {"type": "number", "required": true, "title": "Coefficient"}, "url": {"type": "string", "required": true, "title": "Url"}}}, "limit": {"type": "integer", "required": true, "title": "Limit"}}}}}}}}}, "/search/{dataset}": {"get": {"operationId": "search_search__dataset__get", "description": "Search endpoint for matching entities based on a simple piece of text, e.g.\na name. This can be used to implement a simple, user-facing search. For proper\nentity matching, the multi-property matching API should be used instead.\n\nSearch queries can include field-specific fitlers, wildcards and fuzzy searches.\nSee also: [search API documentation](https://www.opensanctions.org/docs/api/search/).", "parameters": [{"name": "dataset", "in": "path", "description": "Data source or collection name to be queries", "schema": {"type": "string", "required": true, "title": "Data source or collection name to be queries"}}, {"name": "q", "in": "query", "description": "Query text", "schema": {"type": "string", "required": false, "title": "Query text"}}, {"name": "schema", "in": "query", "description": "Types of entities that can match the search", "schema": {"type": "string", "required": false, "title": "Types of entities that can match the search", "default": "Thing"}}, {"name": "include_dataset", "in": "query", "description": "Only include the given datasets in results", "schema": {"type": "array", "required": false, "title": "Only include the given datasets in results", "items": {"type": "string", "required": false}}}, {"name": "exclude_dataset", "in": "query", "description": "Remove the given datasets from results", "schema": {"type": "array", "required": false, "title": "Remove the given datasets from results", "items": {"type": "string", "required": false}}}, {"name": "exclude_schema", "in": "query", "description": "Remove the given types of entities from results", "schema": {"type": "array", "required": false, "title": "Remove the given types of entities from results", "items": {"type": "string", "required": false}}}, {"name": "changed_since", "in": "query", "description": null, "schema": {"type": "string", "required": false}}, {"name": "countries", "in": "query", "description": "Filter by country codes", "schema": {"type": "array", "required": false, "title": "Filter by country codes", "items": {"type": "string", "required": false}}}, {"name": "topics", "in": "query", "description": "Filter by entity topics (e.g. sanction, role.pep)", "schema": {"type": "array", "required": false, "title": "Filter by entity topics (e.g. sanction, role.pep)", "items": {"type": "string", "required": false}}}, {"name": "datasets", "in": "query", "description": "Use `include_dataset` instead", "schema": {"type": "array", "required": false, "title": "Use `include_dataset` instead", "items": {"type": "string", "required": false}}}, {"name": "limit", "in": "query", "description": "Number of results to return", "schema": {"type": "integer", "required": false, "title": "Number of results to return", "maximum": 500, "default": 10}}, {"name": "offset", "in": "query", "description": "Start at result with given offset", "schema": {"type": "integer", "required": false, "title": "Start at result with given offset", "maximum": 9499}}, {"name": "sort", "in": "query", "description": "Sorting criteria", "schema": {"type": "array", "required": false, "title": "Sorting criteria", "items": {"type": "string", "required": false}}}, {"name": "target", "in": "query", "description": null, "schema": {"type": "boolean", "required": false}}, {"name": "fuzzy", "in": "query", "description": "Allow fuzzy query syntax", "schema": {"type": "boolean", "required": false, "title": "Allow fuzzy query syntax"}}, {"name": "simple", "in": "query", "description": "Use simple syntax for user-facing query boxes", "schema": {"type": "boolean", "required": false, "title": "Use simple syntax for user-facing query boxes"}}, {"name": "facets", "in": "query", "description": "Facet counts to include in response.", "schema": {"type": "array", "required": false, "title": "Facet counts to include in response.", "default": ["countries", "topics", "datasets"], "items": {"type": "string", "required": false, "title": "Facet"}}}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "SearchResponse", "properties": {"limit": {"type": "integer", "required": true, "title": "Limit"}, "offset": {"type": "integer", "required": false, "title": "Offset"}, "total": {"type": "object", "required": true, "title": "TotalSpec", "properties": {"value": {"type": "integer", "required": true, "title": "Value"}, "relation": {"type": "string", "required": false, "title": "Relation", "default": "eq"}}}, "results": {"type": "array", "required": true, "title": "Results", "items": {"type": "object", "required": true, "title": "EntityResponse", "properties": {"id": {"type": "string", "required": true, "title": "Id"}, "caption": {"type": "string", "required": true, "title": "Caption"}, "schema": {"type": "string", "required": true, "title": "Schema"}, "properties": {"type": "object", "required": true, "title": "Properties", "properties": {"items": {"type": "string", "required": false}, "type": {"type": "array", "required": false, "items": {"type": "string", "required": false}}}}, "datasets": {"type": "array", "required": false, "title": "Datasets", "items": {"type": "string", "required": false}}, "referents": {"type": "array", "required": false, "title": "Referents", "items": {"type": "string", "required": false}}, "target": {"type": "boolean", "required": false, "title": "Target"}, "first_seen": {"type": "string", "required": false}, "last_seen": {"type": "string", "required": false}, "last_change": {"type": "string", "required": false}}}}, "facets": {"type": "object", "required": true, "title": "Facets", "properties": {"label": {"type": "string", "required": true, "title": "Label"}, "values": {"type": "array", "required": true, "title": "Values", "items": {"type": "object", "required": true, "title": "SearchFacetItem", "properties": {"name": {"type": "string", "required": true, "title": "Name"}, "label": {"type": "string", "required": true, "title": "Label"}, "count": {"type": "integer", "required": false, "title": "Count", "default": 1}}}}}}}}}}}}}}, "/entities/{entity_id}": {"get": {"operationId": "fetch_entity_entities__entity_id__get", "description": "Retrieve a single entity by its ID. The entity will be returned in\nfull, with data from all datasets and with nested entities (adjacent\npassport, sanction and associated entities) included. If the entity ID\nhas been merged into a different canonical entity, an HTTP redirect will\nbe triggered.\n\nIntro: [entity data model](https://www.opensanctions.org/docs/entities/).", "parameters": [{"name": "entity_id", "in": "path", "description": "ID of the entity to retrieve", "schema": {"type": "string", "required": true, "title": "ID of the entity to retrieve"}}, {"name": "nested", "in": "query", "description": "Include adjacent entities (e.g. addresses, family) in response", "schema": {"type": "boolean", "required": false, "title": "Include adjacent entities (e.g. addresses, family) in response", "default": true}}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "EntityResponse", "properties": {"id": {"type": "string", "required": true, "title": "Id"}, "caption": {"type": "string", "required": true, "title": "Caption"}, "schema": {"type": "string", "required": true, "title": "Schema"}, "properties": {"type": "object", "required": true, "title": "Properties", "properties": {"items": {"type": "string", "required": false}, "type": {"type": "array", "required": false, "items": {"type": "string", "required": false}}}}, "datasets": {"type": "array", "required": false, "title": "Datasets", "items": {"type": "string", "required": false}}, "referents": {"type": "array", "required": false, "title": "Referents", "items": {"type": "string", "required": false}}, "target": {"type": "boolean", "required": false, "title": "Target"}, "first_seen": {"type": "string", "required": false}, "last_seen": {"type": "string", "required": false}, "last_change": {"type": "string", "required": false}}}}}}}}}, "/reconcile/{dataset}": {"get": {"operationId": "reconcile_reconcile__dataset__get", "description": "Reconciliation API, emulates Google Refine API. This endpoint can be used\nto bulk match entities against the system using an end-user application like\n[OpenRefine](https://openrefine.org). The reconciliation API uses the same\nsearch and matching functions as the matching API and will also produce\nscores that reflect additional properties like country or date of birth, if\nspecified.\n\nTutorial: [Using OpenRefine to match entities in a spreadsheet](https://www.opensanctions.org/articles/2022-01-10-openrefine-reconciliation/).", "parameters": [{"name": "dataset", "in": "path", "description": "Data source or collection name to be queries", "schema": {"type": "string", "required": true, "title": "Data source or collection name to be queries"}}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "FreebaseManifest", "properties": {"versions": {"type": "array", "required": true, "title": "Versions", "items": {"type": "string", "required": false}}, "name": {"type": "string", "required": true, "title": "Name"}, "identifierSpace": {"type": "string", "required": true, "title": "Identifierspace"}, "schemaSpace": {"type": "string", "required": true, "title": "Schemaspace"}, "view": {"type": "object", "required": true, "title": "FreebaseManifestView", "properties": {"url": {"type": "string", "required": true, "title": "Url"}}}, "preview": {"type": "object", "required": true, "title": "FreebaseManifestPreview", "properties": {"url": {"type": "string", "required": true, "title": "Url"}, "width": {"type": "integer", "required": true, "title": "Width"}, "height": {"type": "integer", "required": true, "title": "Height"}}}, "suggest": {"type": "object", "required": true, "title": "FreebaseManifestSuggest", "properties": {"entity": {"type": "object", "required": true, "title": "FreebaseManifestSuggestType", "properties": {"service_url": {"type": "string", "required": true, "title": "Service Url"}, "service_path": {"type": "string", "required": true, "title": "Service Path"}}}, "type": {"type": "object", "required": true, "title": "FreebaseManifestSuggestType", "properties": {"service_url": {"type": "string", "required": true, "title": "Service Url"}, "service_path": {"type": "string", "required": true, "title": "Service Path"}}}, "property": {"type": "object", "required": true, "title": "FreebaseManifestSuggestType", "properties": {"service_url": {"type": "string", "required": true, "title": "Service Url"}, "service_path": {"type": "string", "required": true, "title": "Service Path"}}}}}, "defaultTypes": {"type": "array", "required": true, "title": "Defaulttypes", "items": {"type": "object", "required": true, "title": "FreebaseType", "properties": {"id": {"type": "string", "required": true, "title": "Id"}, "name": {"type": "string", "required": true, "title": "Name"}, "description": {"type": "string", "required": false}}}}}}}}}}}}, "/catalog": {"get": {"operationId": "catalog_catalog_get", "description": "Return the service manifest, which includes a list of all indexed datasets.\n\nThe manifest is the configuration file of the yente service. It specifies what\ndata sources are included, and how often they should be loaded.", "parameters": [], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "DataCatalogModel", "properties": {"datasets": {"type": "array", "required": true, "title": "Datasets", "items": {"type": "object", "required": true, "title": "DatasetModel", "properties": {"name": {"type": "string", "required": true, "title": "Name"}, "title": {"type": "string", "required": true, "title": "Title"}, "summary": {"type": "string", "required": false}, "url": {"type": "string", "required": false}, "load": {"type": "boolean", "required": true, "title": "Load"}, "entities_url": {"type": "string", "required": false}, "version": {"type": "string", "required": true, "title": "Version"}, "index_version": {"type": "string", "required": false}, "index_current": {"type": "boolean", "required": false, "title": "Index Current"}, "children": {"type": "array", "required": true, "title": "Children", "items": {"type": "string", "required": false}}}}}, "current": {"type": "array", "required": true, "title": "Current", "items": {"type": "string", "required": false}}, "outdated": {"type": "array", "required": true, "title": "Outdated", "items": {"type": "string", "required": false}}, "index_stale": {"type": "boolean", "required": false, "title": "Index Stale"}}}}}}}}}, "/algorithms": {"get": {"operationId": "algorithms_algorithms_get", "description": "Return a list of the supported matching/scoring algorithms used by the matching\nendpoint.\n\nSee also the [scoring documentation](https://www.opensanctions.org/docs/api/scoring/).", "parameters": [], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "AlgorithmResponse", "properties": {"algorithms": {"type": "array", "required": true, "title": "Algorithms", "items": {"type": "object", "required": true, "title": "Algorithm", "properties": {"name": {"type": "string", "required": true, "title": "Name"}, "description": {"type": "string", "required": false}, "features": {"type": "object", "required": true, "title": "Features", "properties": {"description": {"type": "string", "required": true}, "coefficient": {"type": "number", "required": true, "title": "Coefficient"}, "url": {"type": "string", "required": true, "title": "Url"}}}}}}, "default": {"type": "string", "required": true, "title": "Default"}, "best": {"type": "string", "required": true, "title": "Best"}}}}}}}}}, "/billing/account": {"get": {"operationId": "get_account_billing_account_get", "description": "Return the account details linked to the given API key and the\nmeasured API request usage of the account in the past period.", "parameters": [{"name": "usage_credential", "in": "query", "description": null, "schema": {"type": "integer", "required": false}}, {"name": "access_token", "in": "query", "description": null, "schema": {"type": "string", "required": false}}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "AccountResponse", "properties": {"credentials": {"type": "array", "required": true, "title": "Credentials", "items": {"type": "object", "required": true, "title": "Credential", "properties": {"id": {"type": "integer", "required": true, "title": "Id"}, "customer_id": {"type": "integer", "required": true, "title": "Customer Id"}, "label": {"type": "string", "required": true}, "secret": {"type": "string", "required": true, "title": "Secret"}, "chargebee_subscription_id": {"type": "string", "required": true}, "created_at": {"type": "string", "required": true, "title": "Created At"}, "expires_at": {"type": "string", "required": true}, "monthly_quota": {"type": "integer", "required": true}}}}, "user": {"type": "object", "required": true, "title": "User", "properties": {"id": {"type": "integer", "required": true, "title": "Id"}, "customer_id": {"type": "integer", "required": true, "title": "Customer Id"}, "sub": {"type": "string", "required": true, "title": "Sub"}, "name": {"type": "string", "required": true}, "email": {"type": "string", "required": true, "title": "Email"}, "created_at": {"type": "string", "required": true, "title": "Created At"}, "blocked": {"type": "boolean", "required": true, "title": "Blocked"}}}, "customer": {"type": "object", "required": true, "title": "Customer", "properties": {"id": {"type": "integer", "required": true, "title": "Id"}, "name": {"type": "string", "required": true}, "chargebee_id": {"type": "string", "required": true}, "created_at": {"type": "string", "required": true, "title": "Created At"}}}, "usage": {"type": "object", "required": true, "title": "UserUsage", "properties": {"dates": {"type": "array", "required": true, "title": "Dates", "items": {"type": "object", "required": true, "title": "DateUsage", "properties": {"routes": {"type": "array", "required": true, "title": "Routes", "items": {"type": "object", "required": true, "title": "RouteUsage", "properties": {"route": {"type": "string", "required": true, "title": "Route"}, "count": {"type": "integer", "required": true, "title": "Count"}}}}, "date": {"type": "string", "required": true, "title": "Date"}, "total": {"type": "integer", "required": true, "title": "Total"}}}}, "days": {"type": "integer", "required": true, "title": "Days"}, "total": {"type": "integer", "required": true, "title": "Total"}}}}}}}}}}}, "/statements": {"get": {"operationId": "statements_statements_get", "description": "Access raw entity data as statements.\n\nRead [statement-based data model](https://www.opensanctions.org/docs/statements/)\nfor context regarding this endpoint.\n\nUsing this endpoint does not incur a charge, but a valid API key must be supplied.", "parameters": [{"name": "dataset", "in": "query", "description": null, "schema": {"type": "string", "required": false}}, {"name": "entity_id", "in": "query", "description": null, "schema": {"type": "string", "required": false}}, {"name": "canonical_id", "in": "query", "description": null, "schema": {"type": "string", "required": false}}, {"name": "prop", "in": "query", "description": null, "schema": {"type": "string", "required": false}}, {"name": "value", "in": "query", "description": null, "schema": {"type": "string", "required": false}}, {"name": "target", "in": "query", "description": null, "schema": {"type": "boolean", "required": false}}, {"name": "schema", "in": "query", "description": null, "schema": {"type": "string", "required": false}}, {"name": "sort", "in": "query", "description": "Sorting criteria", "schema": {"type": "array", "required": false, "title": "Sorting criteria", "default": ["canonical_id", "prop"], "items": {"type": "string", "required": false}}}, {"name": "limit", "in": "query", "description": "Number of results to return", "schema": {"type": "integer", "required": false, "title": "Number of results to return", "maximum": 5000, "default": 50}}, {"name": "offset", "in": "query", "description": "Number of results to skip before returning them", "schema": {"type": "integer", "required": false, "title": "Number of results to skip before returning them", "maximum": 9499}}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object", "required": true, "title": "StatementResponse", "properties": {"limit": {"type": "integer", "required": true, "title": "Limit"}, "offset": {"type": "integer", "required": false, "title": "Offset"}, "total": {"type": "object", "required": true, "title": "TotalSpec", "properties": {"value": {"type": "integer", "required": true, "title": "Value"}, "relation": {"type": "string", "required": false, "title": "Relation", "default": "eq"}}}, "results": {"type": "array", "required": true, "title": "Results", "items": {"type": "object", "required": true, "title": "Statement", "properties": {"id": {"type": "string", "required": true, "title": "Id"}, "entity_id": {"type": "string", "required": true, "title": "Entity Id"}, "canonical_id": {"type": "string", "required": true, "title": "Canonical Id"}, "prop": {"type": "string", "required": true, "title": "Prop"}, "prop_type": {"type": "string", "required": true, "title": "Prop Type"}, "schema": {"type": "string", "required": true, "title": "Schema"}, "value": {"type": "string", "required": true, "title": "Value"}, "original_value": {"type": "string", "required": false}, "dataset": {"type": "string", "required": true, "title": "Dataset"}, "lang": {"type": "string", "required": false}, "target": {"type": "boolean", "required": true, "title": "Target"}, "first_seen": {"type": "string", "required": true, "title": "First Seen"}, "last_seen": {"type": "string", "required": true, "title": "Last Seen"}}}}}}}}}}}}}, "tags": [{"name": "Data access"}, {"name": "Matching"}, {"name": "Reconciliation"}, {"name": "System information"}]}
